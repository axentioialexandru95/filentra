#!/bin/bash

# GitHub Workflows Validation Script
# This script validates that all GitHub workflows are properly configured

set -e

echo "üîç Validating GitHub Workflows..."

WORKFLOWS_DIR=".github/workflows"
REQUIRED_WORKFLOWS=("lint.yml" "tests.yml" "phpstan.yml" "code-quality.yml")
VALIDATION_ERRORS=0

# Check if workflows directory exists
if [[ ! -d "$WORKFLOWS_DIR" ]]; then
    echo "‚ùå Workflows directory not found: $WORKFLOWS_DIR"
    exit 1
fi

echo "üìÅ Found workflows directory: $WORKFLOWS_DIR"

# Check for required workflow files
echo "üìã Checking required workflow files..."
for workflow in "${REQUIRED_WORKFLOWS[@]}"; do
    if [[ -f "$WORKFLOWS_DIR/$workflow" ]]; then
        echo "‚úÖ $workflow exists"
    else
        echo "‚ùå $workflow is missing"
        ((VALIDATION_ERRORS++))
    fi
done

# Validate PHPStan configuration
echo "üîß Validating PHPStan configuration..."
if [[ -f "phpstan.neon" ]]; then
    echo "‚úÖ phpstan.neon exists"

    # Check if Larastan is included
    if grep -q "larastan/larastan/extension.neon" phpstan.neon; then
        echo "‚úÖ Larastan extension is configured"
    else
        echo "‚ö†Ô∏è  Larastan extension might not be configured"
        ((VALIDATION_ERRORS++))
    fi

    # Check if baseline is included
    if grep -q "phpstan-baseline.neon" phpstan.neon; then
        echo "‚úÖ Baseline is configured"
    else
        echo "‚ö†Ô∏è  Baseline might not be configured"
    fi
else
    echo "‚ùå phpstan.neon is missing"
    ((VALIDATION_ERRORS++))
fi

# Check if PHPStan baseline exists
if [[ -f "phpstan-baseline.neon" ]]; then
    echo "‚úÖ PHPStan baseline exists"
else
    echo "‚ö†Ô∏è  PHPStan baseline not found (this is OK for new projects)"
fi

# Check if alternative config exists
if [[ -f "phpstan-no-baseline.neon" ]]; then
    echo "‚úÖ Alternative PHPStan config exists"
else
    echo "‚ö†Ô∏è  Alternative PHPStan config not found"
fi

# Validate composer scripts
echo "üéº Validating Composer scripts..."
if [[ -f "composer.json" ]]; then
    if grep -q '"phpstan"' composer.json; then
        echo "‚úÖ PHPStan composer script exists"
    else
        echo "‚ùå PHPStan composer script is missing"
        ((VALIDATION_ERRORS++))
    fi

    if grep -q '"phpstan:baseline"' composer.json; then
        echo "‚úÖ PHPStan baseline composer script exists"
    else
        echo "‚ùå PHPStan baseline composer script is missing"
        ((VALIDATION_ERRORS++))
    fi

    if grep -q '"phpstan:check"' composer.json; then
        echo "‚úÖ PHPStan check composer script exists"
    else
        echo "‚ùå PHPStan check composer script is missing"
        ((VALIDATION_ERRORS++))
    fi
else
    echo "‚ùå composer.json not found"
    ((VALIDATION_ERRORS++))
fi

# Validate package.json scripts
echo "üì¶ Validating NPM scripts..."
if [[ -f "package.json" ]]; then
    if grep -q '"types"' package.json; then
        echo "‚úÖ TypeScript check script exists"
    else
        echo "‚ùå TypeScript check script is missing"
        ((VALIDATION_ERRORS++))
    fi

    if grep -q '"lint"' package.json; then
        echo "‚úÖ Linting script exists"
    else
        echo "‚ùå Linting script is missing"
        ((VALIDATION_ERRORS++))
    fi
else
    echo "‚ùå package.json not found"
    ((VALIDATION_ERRORS++))
fi

# Check for required dependencies
echo "üîç Checking required dependencies..."
if grep -q '"phpstan/phpstan"' composer.json; then
    echo "‚úÖ PHPStan is installed"
else
    echo "‚ùå PHPStan is not installed"
    ((VALIDATION_ERRORS++))
fi

if grep -q '"larastan/larastan"' composer.json; then
    echo "‚úÖ Larastan is installed"
else
    echo "‚ùå Larastan is not installed"
    ((VALIDATION_ERRORS++))
fi

# Validate workflow syntax (basic check)
echo "üîß Validating workflow syntax..."
for workflow_file in "$WORKFLOWS_DIR"/*.yml; do
    if [[ -f "$workflow_file" ]]; then
        workflow_name=$(basename "$workflow_file")
        if grep -q "name:" "$workflow_file" && grep -q "on:" "$workflow_file" && grep -q "jobs:" "$workflow_file"; then
            echo "‚úÖ $workflow_name has valid basic structure"
        else
            echo "‚ùå $workflow_name has invalid structure"
            ((VALIDATION_ERRORS++))
        fi
    fi
done

# Check for PHPStan in workflows
echo "üîç Checking PHPStan integration in workflows..."
phpstan_found=false
for workflow_file in "$WORKFLOWS_DIR"/*.yml; do
    if [[ -f "$workflow_file" ]]; then
        if grep -q "phpstan\|PHPStan" "$workflow_file"; then
            workflow_name=$(basename "$workflow_file")
            echo "‚úÖ PHPStan found in $workflow_name"
            phpstan_found=true
        fi
    fi
done

if [[ "$phpstan_found" == false ]]; then
    echo "‚ùå PHPStan not found in any workflow"
    ((VALIDATION_ERRORS++))
fi

# Final validation result
echo ""
echo "üìä Validation Summary:"
echo "====================="

if [[ $VALIDATION_ERRORS -eq 0 ]]; then
    echo "üéâ All validations passed! GitHub workflows are properly configured."
    echo ""
    echo "‚úÖ PHPStan static analysis is integrated"
    echo "‚úÖ All required workflows are present"
    echo "‚úÖ Dependencies are correctly installed"
    echo "‚úÖ Composer scripts are configured"
    echo ""
    echo "Your CI/CD pipeline is ready to catch code quality issues!"
    exit 0
else
    echo "‚ùå Found $VALIDATION_ERRORS validation error(s)"
    echo ""
    echo "Please fix the issues above before proceeding."
    echo "Run this script again after making corrections."
    exit 1
fi
